import * as process from 'process'
import { DataSource } from 'typeorm'
import { join } from 'path'
import * as dotenv from 'dotenv'
dotenv.config()

// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const PG_NAME = process.env.PG_NAME
const PG_PASS = process.env.PG_PASS

// –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –±—ã–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
if (!PG_NAME || !PG_PASS) {
  throw new Error('üö® –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö')
}

// –°–æ–∑–¥–∞–Ω–∏–µ DataSource —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const dataSource = new DataSource({
  type: 'postgres',
  host: 'localhost',
  port: 5432,
  username: PG_NAME,
  password: PG_PASS,
  database: 'qtim_test',
  entities: [join(__dirname, '..', 'features', 'articles', 'entities', '*.entity.{ts,js}'),
    join(__dirname, '..', 'features', 'auth', 'entities', '*.entity.{ts,js}'),
    join(__dirname, '..', 'features', 'users', 'entities', '*.entity.{ts,js}')],
  // eslint-disable-next-line n/no-path-concat
  migrations: [join(__dirname, 'migrations', '**', '*{.ts,.js}')],
  synchronize: false
})

export default dataSource
